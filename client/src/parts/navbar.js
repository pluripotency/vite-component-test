// Generated by CoffeeScript 2.7.0
var NavItemDropDown;

import h from 'react-hyperscript';

import React, {
  useState,
  useEffect
} from 'react';

NavItemDropDown = function({name, dropdown_list, active, select_index, select_nav}) {
  var open_drop, setOpenDrop;
  [open_drop, setOpenDrop] = useState(true);
  return h('li.nav-item.dropdown', {
    key: 'nav_item_dropdown',
    className: active ? 'active' : void 0
  }, [
    h('a.nav-link.dropdown-toggle',
    {
      onClick: function(e) {
        e.preventDefault();
        select_index();
        return setOpenDrop(true);
      }
    },
    name),
    active && open_drop ? h('.dropdown-menu.show',
    dropdown_list.map(function(item) {
      return h('a.dropdown-item',
    {
        href: '#',
        onClick: function(e) {
          e.preventDefault();
          select_nav(item);
          return setOpenDrop(false);
        }
      },
    item.name);
    })) : void 0
  ]);
};

export var NavList = function({nav_list, default_index, select_nav}) {
  var openDrop, selected_index, setIndex, setOpenDrop;
  [selected_index, setIndex] = useState(default_index);
  [openDrop, setOpenDrop] = useState(false);
  return h('ul.navbar-nav.mr-auto', {
    key: 'nav_list'
  }, nav_list.map(function(item, i) {
    if (item.dropdown_list != null) {
      return h(NavItemDropDown, {
        name: item.name,
        dropdown_list: item.dropdown_list,
        active: selected_index === i ? true : void 0,
        select_index: function() {
          return setIndex(i);
        },
        select_nav: select_nav
      });
    } else {
      return h('li.nav-item', {
        className: selected_index === i ? 'active' : void 0
      }, [
        h('a.nav-link',
        {
          onClick: function(e) {
            e.preventDefault();
            setIndex(i);
            return select_nav(item);
          }
        },
        item.name)
      ]);
    }
  }));
};

export var NavBar = function({title, bar_left, collapse_items}) {
  var collapse, setCollapse;
  [collapse, setCollapse] = useState(true);
  useEffect(function() {
    document.title = title;
  }, []);
  return h("nav.navbar.navbar-expand-md.bg-dark.navbar-dark", [
    h('a.navbar-brand.text-light',
    title),
    h('button.navbar-toggler',
    {
      onClick: function(e) {
        e.preventDefault();
        return setCollapse(!collapse);
      }
    },
    [h('span.navbar-toggler-icon')]),
    bar_left ? bar_left : void 0,
    h('.navbar-collapse',
    {
      className: collapse ? 'collapse' : 'in'
    },
    collapse_items)
  ]);
};
